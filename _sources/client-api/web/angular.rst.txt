Angular
=======

.. raw:: html
   
   <a href="https://www.npmjs.com/package/@alan-ai/alan-sdk-web">
   <img src="https://img.shields.io/npm/v/@alan-ai/alan-sdk-web.svg" align="left" style="border:inherit; padding-right:10px" /></a>

   <a href="https://github.com/alan-ai/alan-sdk-web/releases">
   <img src="https://img.shields.io/github/v/release/alan-ai/alan-sdk-web" align="left" style="border:inherit"/></a>
   
   <br/>

Integrating with Alan
---------------------

1. Install the ``@alan-ai/alan-sdk-web`` package and import the ``alanBtn`` into your component:

   .. code:: bash

       $ npm install @alan-ai/alan-sdk-web --save

   .. code:: javascript

       import alanBtn from "@alan-ai/alan-sdk-web";

   Or just add the ``alan_lib.js`` library to your index.html page via the script tag:

   .. code:: html

       <script type="text/javascript" src="https://studio.alan.app/web/lib/alan_lib.min.js"></script>

2. Add the Alan button to your component:

   .. code:: javascript

       export class AppComponent {

         alanBtnInstance;

         constructor() {
           this.alanBtnInstance = alanBtn({
             key: 'YOUR_KEY_FROM_ALAN_STUDIO_HERE',
             onCommand: (commandData) => {
               if (commandData.command === 'go:back') {
                 // Call the client code that will react to the received command
               }
             },
           });
         }
       }

For details, see :doc:`Alan button parameters <web-api#alan-button-parameters>`.

Integration example
-------------------

See an example of the React app with the Alan button `here <https://github.com/alan-ai/alan-sdk-web/tree/master/examples/alan-example-integration-angular>`__.

.. raw:: html

   <div id="purple-background"></div>

