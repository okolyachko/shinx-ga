Alan Apache Cordova Framework
=============================

**Available on**: :badge:`Android,badge-info` :badge:`iOS,badge-success`

To create a voice assistant for an Apache Cordova app, you need to do the following:

1. `Create an Apache Cordova app <#step-1-create-an-apache-cordova-app>`__
2. `Integrate the app with Alan <#step-2-integrate-the-app-with-alan>`__
3. `Build and run the app <#step-3-build-and-run-the-app>`__


Step 1. Create an Apache Cordova app
------------------------------------

You can create an Apache Cordova app from scratch or add a voice assistant to an existing project. In the latter case, skip this step and go to `Step 2. Integrate the app with Alan <#step-2-integrate-the-app-with-alan>`__.

To create an Apache Cordova app:

1. Install the Cordova CLI:

   .. code:: bash

       npm install -g cordova

   .. note:: 
      
	  For Mac or Linux, you may need to run the commands with ``sudo``. For more details, see the Cordova CLI Reference.

2. Go to the directory where your app must reside and create a Cordova project:

   .. code:: bash

       cordova create hello com.example.hello HelloWorld
	   
   .. note::

      This command creates the required structure for your Cordova app. By default, it generates a web-based app. You will add the iOS and Android targets later in this procedure.

Step 2. Integrate the app with Alan
-----------------------------------

To add voice to your app:

1. Navigate to the folder where your app resides:

   .. code:: bash

       cd hello

2. Add the platform for which you want to build the app — iOS and/or Android:

   .. code:: bash

       cordova platform add ios
       cordova platform add android

3. Install the Alan SDK Cordova plugin:

   .. code:: bash
 
      cordova plugin add @alan-ai/cordova-plugin-alan-voice

4. Modify the app to add the Alan button. To do this, to the ``index.js`` file, add the following code:

   .. code:: js

       function onDeviceReady() {
       // Cordova is now initialized. Have fun!

         // The Alan button component
         cordova.exec(
           function(data) {
             console.log(data);
           },
           function(error) {
             console.log(error);
           },
           "alanVoice",
           "addButton",
           ["YOUR_KEY_FROM_ALAN_STUDIO_HERE"]);

         console.log('Running cordova-' + cordova.platformId + '@' + cordova.version);
         document.getElementById('deviceready').classList.add('ready');
       }

5. Replace ``YOUR_KEY_FROM_ALAN_STUDIO_HERE`` with the Alan SDK key for your Alan Studio project. To get the key, in Alan Studio, at the top of the code editor, click **Integrations** and copy the value from the **Alan SDK Key** field.

Step 3. Build and run the app
-----------------------------

1. Build the app for the target platform — iOS and/or Android:

   .. code:: bash

       cordova build ios
       cordova build android

2. (For iOS) In iOS, the user must explicitly grant permission for an app to `access user's data and resources <https://developer.apple.com/design/human-interface-guidelines/ios/app-architecture/accessing-user-data/>`__. An app with the Alan button requires access to:

   - User's device microphone for voice interactions
   - User's device camera for testing Alan projects on mobile

   To comply with this requirement, you must add ``NSMicrophoneUsageDescription`` and ``NSCameraUsageDescription`` keys to the ``Info.plist`` file of your app and provide a message why your app requires access to the microphone and camera. The message will be displayed only when Alan needs to activate the microphone or camera.
   
   To add the keys:

   a. In the app, navigate to the ``platforms/ios`` folder and open the generated XCode workspace file: ``<appname>.xcworkspace``. You
      should use this file to open your Xcode project from now on.

   b. In Xcode, go to the **Info** tab.

   c. In the **Custom iOS Target Properties** section, hover over any key in the list and click the plus icon to the right.

   d. From the list, select **Privacy - Microphone Usage Description**.

   e. In the **Value** field to the right, provide a description for the added key. This description will be displayed to the user when the app is launched.

   f. Repeat the steps above to add the **Privacy - Camera Usage Description** key.

   .. image:: /_static/assets/img/ios-quickstart-objc/pods-mic.png
   
3. To run your Apache Cordova app integrated with Alan, use the following commands:

   .. code:: bash

       cordova run ios
       cordova run android

.. tip::

   You can also launch the app from XCode or the Android Studio: open ``platforms/android`` or ``platforms/ios`` in the IDE and run the app in a usual way.
   
.. raw:: html

   <div id="purple-background"></div>