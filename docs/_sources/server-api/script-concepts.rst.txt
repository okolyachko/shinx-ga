Script concepts
===============

The Alan Voice AI Platform provides a framework for fast and easy
development and deployment of voice UX for any app. To design a dialog
for your voice assistant, you need to create voice scripts using
JavaScript in Alan Studio.

Alan augments the standard JavaScript and offers predefined functions
and objects to create visual voice experiences. To get started with
voice scripts, see the following sections:

-  :doc:`Commands and responses <commands-and-responses>`
-  :doc:`Patterns <patterns>`
-  :doc:`Slots <slots>`
-  :doc:`Contexts <contexts>`
-  :doc:`Dynamic entities <dynamic-entities>`
-  :doc:`Built-in JavaScript libraries <built-in-javascript-libraries>`
-  :doc:`Predefined script objects <objects>`
-  :doc:`Visual state <sending-data/visual-state>`
-  :doc:`Project API <sending-data/project-api>`
-  :doc:`Error handling and re-prompt <error-handling>`
-  :doc:`Voice assistant lifecycle <lifecycle>`
-  (Experimental) :doc:`Alan button popups <popups>`

To get reference information about all functions and objects that you can use in voice scripts, see the :doc:`API
reference <api/api-reference>`.

.. _Multiple scripts in the project:

Multiple scripts in the project
-------------------------------

You can add as many scripts to the project as you need. If your project comprises several scripts, the scripts are loaded in the order of their placement in the script panel in Alan Studio. Upper scripts are loaded first. Please keep it in mind when defining the logic for your voice assistant.

.. note::

   To share data in a project with several scripts, you can use the ``project`` global object. For details, see :doc:`Predefined script objects <objects>`.

.. raw:: html

   <div id="green-background"></div>   
   
.. toctree::
   :maxdepth: 1
   :hidden:
   
   Commands and responses<commands-and-responses>
   Patterns<patterns>
   Slots<slots>
   Contexts<contexts>
   Dynamic entities<dynamic-entities>
   Built-in JavaScript libraries<built-in-javascript-libraries>
   Predefined script objects <objects>
   Voice assistant lifecycle<lifecycle>
   Error handling and re-prompt<error-handling>
   Alan button popups<popups>
   Communication with the app<sending-data/communication>
   User data<user-data/overview>
   API reference<api/api-reference>